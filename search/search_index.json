{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"@media only screen and (min-width: 60em) { .md-sidebar--secondary { display: none; } .md-content { margin-right: 0; margin-left: 0; padding:0; margin-top:0;max-width: 100%; } @media only screen and (min-width: 76.1875em) { .md-sidebar--primary { display: none; } .md-content { margin-right: 0; margin-left: 0; margin-top: 0; padding:0;max-width: 100%;} } .md-content__inner {margin-top: 0; padding-top: 0} Getting Started Some Description Click here to Get Started \u2192 Carousel Some big Description Learn More \u2192 Goal Some Description Some Other heading Blah blah blah Learn More \u2192","title":"Home"},{"location":"getting-started/carousel.html","text":"Learn More \u2192 Learn More \u2192 Learn More \u2192 Learn More \u2192","title":"Carousel"},{"location":"getting-started/creating-diagrams.html","text":"Refer Mermaid-js and documentation for more details 1\ufe0f\u20e3 Flow \u00b6 Example #1 \u00b6 Output graph TD; A-->B; A-->C; B-->D; C-->D; Markdown ```mermaid graph TD; A-->B; A-->C; B-->D; C-->D; ``` Example #2 \u00b6 Output graph TD A[Hard] -->|Text| B(Round) B --> C{Decision} C -->|One| D[Result 1] C -->|Two| E[Result 2] Markdown ```mermaid graph TD A[Hard] -->|Text| B(Round) B --> C{Decision} C -->|One| D[Result 1] C -->|Two| E[Result 2] ``` 2\ufe0f\u20e3 Sequence \u00b6 Output sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! Markdown ```mermaid sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! ``` 3\ufe0f\u20e3 Gantt \u00b6 Output gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d Markdown ```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` 4\ufe0f\u20e3 Class \u00b6 Output classDiagram Class01 <|-- AveryLongClass : Cool <<interface>> Class01 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { <<service>> int id size() } Markdown ```mermaid classDiagram Class01 <|-- AveryLongClass : Cool <<interface>> Class01 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { <<service>> int id size() } ``` 5\ufe0f\u20e3 State \u00b6 Output stateDiagram-v2 [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] Markdown ```mermaid stateDiagram-v2 [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] ``` 6\ufe0f\u20e3 Pie \u00b6 Output pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 Markdown ```mermaid pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 ``` 7\ufe0f\u20e3 Journey \u00b6 Output journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me Markdown ```mermaid journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me ``` 8\ufe0f\u20e3 ER \u00b6 Output erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Markdown ```mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ```","title":"Creating Diagrams"},{"location":"getting-started/creating-diagrams.html#1-flow","text":"","title":"1\ufe0f\u20e3 Flow"},{"location":"getting-started/creating-diagrams.html#example-1","text":"Output graph TD; A-->B; A-->C; B-->D; C-->D; Markdown ```mermaid graph TD; A-->B; A-->C; B-->D; C-->D; ```","title":"Example #1"},{"location":"getting-started/creating-diagrams.html#example-2","text":"Output graph TD A[Hard] -->|Text| B(Round) B --> C{Decision} C -->|One| D[Result 1] C -->|Two| E[Result 2] Markdown ```mermaid graph TD A[Hard] -->|Text| B(Round) B --> C{Decision} C -->|One| D[Result 1] C -->|Two| E[Result 2] ```","title":"Example #2"},{"location":"getting-started/creating-diagrams.html#2-sequence","text":"Output sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! Markdown ```mermaid sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! ```","title":"2\ufe0f\u20e3 Sequence"},{"location":"getting-started/creating-diagrams.html#3-gantt","text":"Output gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d Markdown ```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```","title":"3\ufe0f\u20e3 Gantt"},{"location":"getting-started/creating-diagrams.html#4-class","text":"Output classDiagram Class01 <|-- AveryLongClass : Cool <<interface>> Class01 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { <<service>> int id size() } Markdown ```mermaid classDiagram Class01 <|-- AveryLongClass : Cool <<interface>> Class01 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { <<service>> int id size() } ```","title":"4\ufe0f\u20e3 Class"},{"location":"getting-started/creating-diagrams.html#5-state","text":"Output stateDiagram-v2 [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] Markdown ```mermaid stateDiagram-v2 [*] --> Still Still --> [*] Still --> Moving Moving --> Still Moving --> Crash Crash --> [*] ```","title":"5\ufe0f\u20e3 State"},{"location":"getting-started/creating-diagrams.html#6-pie","text":"Output pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 Markdown ```mermaid pie \"Dogs\" : 386 \"Cats\" : 85 \"Rats\" : 15 ```","title":"6\ufe0f\u20e3 Pie"},{"location":"getting-started/creating-diagrams.html#7-journey","text":"Output journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me Markdown ```mermaid journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me ```","title":"7\ufe0f\u20e3 Journey"},{"location":"getting-started/creating-diagrams.html#8-er","text":"Output erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Markdown ```mermaid erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses ```","title":"8\ufe0f\u20e3 ER"},{"location":"getting-started/creating-pages.html","text":"1\ufe0f\u20e3 Basics \u00b6 Get started with Markdown basics then move on to advance concepts . Download the cheat sheet Move on to learning linking pages 2\ufe0f\u20e3 Components \u00b6 Note : Space place very critical role in Markdown. Tabs \u00b6 Refer this for more details. Markup \u00b6 === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Output \u00b6 C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Tables \u00b6 Refer this for more details Output Method Description GET Fetch resource PUT Update resource DELETE Delete resource Markdown | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Images \u00b6 Example #1 \u00b6 Output Markdown ![Placeholder](https://dummyimage.com/600x400/eee/aaa){: align=left } Example #2 \u00b6 Output Markdown ![](../img/Octocat.png) Task Lists \u00b6 Output item 1 item A item B more text item a item b item c item C item 2 item 3 Markdown - [X] item 1 * [X] item A * [ ] item B more text + [x] item a + [ ] item b + [x] item c * [X] item C - [ ] item 2 - [ ] item 3 Call outs \u00b6 See this for more details. Success \u00b6 Output optional explicit title within double quotes Any number of other indented markdown elements. This is the second paragraph. Markdown !!! success \"optional explicit title within double quotes\" Any number of other indented markdown elements. This is the second paragraph. Note \u00b6 Output Note You should note that the title will be automatically capitalized.h. Markdown !!! note You should note that the title will be automatically capitalized. Danger \u00b6 Output Don't try this at home ... Markdown !!! danger \"Don't try this at home\" ... Important \u00b6 Output This is important admonition box. Markdown !!! important \"\" This is important admonition box. Tip \u00b6 Output tip This is tip admonition box. Markdown !!! tip \"tip\" This is tip admonition box. Warning \u00b6 Output warning This is warning admonition box. Markdown !!! warning \"warning\" This is warning admonition box. Error \u00b6 Output error This is an error admonition box. Markdown !!! error \"error\" This is an error admonition box. Info \u00b6 Output info This is an info admonition box. Markdown !!! info \"info\" This is an info admonition box. Quote \u00b6 Output quote This is an quote admonition box. Markdown !!! quote \"quote \" This is an quote admonition box. Example \u00b6 Output example This is an example admonition box. Markdown !!! example \"example\" This is an example admonition box. Question \u00b6 Output question This is an example admonition box. Markdown !!! question \"question\" This is an question admonition box. Failure \u00b6 Output failure This is an failure admonition box. Markdown !!! failure \"failure\" This is an failure admonition box. Danger \u00b6 Output danger This is an danger admonition box. Markdown !!! danger \"danger\" This is an danger admonition box. Bug \u00b6 Output bug This is an bug admonition box. Markdown !!! bug \"bug\" This is an bug admonition box. Abstract \u00b6 Output abstract This is an abstract admonition box. Markdown !!! abstract \"abstract\" This is an abstract admonition box. Details \u00b6 Refer this for more details Example #1 \u00b6 Output Success Content. Warning Content. Tip Content. Note Content. Example Content. Quote Content. Info Content. Question Content. Failure Content. Bug Content. Abstract Content. Markdown ??? success Content. ??? warning classes Content. ??? tip Content. ??? note classes Content. ??? success Content. ??? example classes Content. ??? quote classes Content. ??? info classes Content. ??? question classes Content. ??? failure classes Content. ??? bug classes Content. ??? abstract classes Content. Example #2 \u00b6 Output Summary Here's some content. Summary Here's some content. Markdown ??? optional-class \"Summary\" optional-class: Here's some content. ??? multiple optional-class \"Summary\" multiple class: Here's some content. Example #3 \u00b6 Output Note Here's some content. Markdown ???+ note default expanded Here's some content. Progress Bar \u00b6 Refer this for more details Example #1 \u00b6 Output 0% 5% 25% 45% 65% 85% 100% Markdown [=0% \"0%\"] [=5% \"5%\"] [=25% \"25%\"] [=45% \"45%\"] [=65% \"65%\"] [=85% \"85%\"] [=100% \"100%\"] Example #2 \u00b6 Output 10% More than 25% All set Markdown [=1/10 \"10%\"] [=5%] [=25% \"More than 25%\"] [=100/100 'All set'] Example #3 \u00b6 Output 100% 85% 100% 85% 85% 100% 85% 85% 100% 85% 100% 85% 100% 100% Markdown [=100% \"100%\"]{: .static .blue} [=85% \"85%\"]{: .static .lightcyan} [=100% \"100%\"]{: .static .darkcyan} [=85% \"85%\"]{: .static .verydarkcyan} [=85% \"85%\"]{: .static .blueviolet} [=100% \"100%\"]{: .static .bisque} [=85% \"85%\"]{: .static .green} [=85% \"85%\"]{: .static .darkgreen} [=100% \"100%\"]{: .static .orange} [=85% \"85%\"]{: .static .orangered} [=100% \"100%\"]{: .static .olivedrab} [=85% \"85%\"]{: .static .red} [=100% \"100%\"]{: .static .gray} [=100% \"100%\"]{: .static .grey} Example #4 \u00b6 Output 85% 100% Markdown [=85% \"85%\"]{: .candystripe} [=100% \"100%\"]{: .candystripe .candystripe-animate} [=0%]{: .thin} [=5%]{: .thin} [=25%]{: .thin} [=45%]{: .thin} [=65%]{: .thin} [=85%]{: .thin} [=100%]{: .thin} Example #5 \u00b6 Output Going good In progress Blocked Not Started Completed Markdown [=91% \"Going good\"]{: .static .blue} [=85% \"In progress\"]{: .static .orange} [=100% \"Blocked\"]{: .static .red} [=100% \"Not Started\"]{: .static .grey} [=100% \"Completed\"]{: .static .darkgreen} 3\ufe0f\u20e3 References \u00b6 Markdown \ud83d\udcaa \u00b6 Github Markdown Mkdocs Writing your Docs Material for MKDocs pymdown-extensions Emojis \ud83d\ude03 \u00b6 Emojis Github Markup Emojis emoji-cheat-sheet style-digits Badges \ud83d\udcdb \u00b6 Badges Drawings \u2712\ufe0f \u00b6 mermaid js mermaid plugin Others \ud83d\udcd2 \u00b6 Markdown Guide","title":"Creating Pages"},{"location":"getting-started/creating-pages.html#1-basics","text":"Get started with Markdown basics then move on to advance concepts . Download the cheat sheet Move on to learning linking pages","title":"1\ufe0f\u20e3 Basics"},{"location":"getting-started/creating-pages.html#2-components","text":"Note : Space place very critical role in Markdown.","title":"2\ufe0f\u20e3 Components"},{"location":"getting-started/creating-pages.html#tabs","text":"Refer this for more details.","title":"Tabs"},{"location":"getting-started/creating-pages.html#markup","text":"=== \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ```","title":"Markup"},{"location":"getting-started/creating-pages.html#output","text":"C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Output"},{"location":"getting-started/creating-pages.html#tables","text":"Refer this for more details Output Method Description GET Fetch resource PUT Update resource DELETE Delete resource Markdown | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource |","title":"Tables"},{"location":"getting-started/creating-pages.html#images","text":"","title":"Images"},{"location":"getting-started/creating-pages.html#example-1","text":"Output Markdown ![Placeholder](https://dummyimage.com/600x400/eee/aaa){: align=left }","title":"Example #1"},{"location":"getting-started/creating-pages.html#example-2","text":"Output Markdown ![](../img/Octocat.png)","title":"Example #2"},{"location":"getting-started/creating-pages.html#task-lists","text":"Output item 1 item A item B more text item a item b item c item C item 2 item 3 Markdown - [X] item 1 * [X] item A * [ ] item B more text + [x] item a + [ ] item b + [x] item c * [X] item C - [ ] item 2 - [ ] item 3","title":"Task Lists"},{"location":"getting-started/creating-pages.html#call-outs","text":"See this for more details.","title":"Call outs"},{"location":"getting-started/creating-pages.html#success","text":"Output optional explicit title within double quotes Any number of other indented markdown elements. This is the second paragraph. Markdown !!! success \"optional explicit title within double quotes\" Any number of other indented markdown elements. This is the second paragraph.","title":"Success"},{"location":"getting-started/creating-pages.html#note","text":"Output Note You should note that the title will be automatically capitalized.h. Markdown !!! note You should note that the title will be automatically capitalized.","title":"Note"},{"location":"getting-started/creating-pages.html#danger","text":"Output Don't try this at home ... Markdown !!! danger \"Don't try this at home\" ...","title":"Danger"},{"location":"getting-started/creating-pages.html#important","text":"Output This is important admonition box. Markdown !!! important \"\" This is important admonition box.","title":"Important"},{"location":"getting-started/creating-pages.html#tip","text":"Output tip This is tip admonition box. Markdown !!! tip \"tip\" This is tip admonition box.","title":"Tip"},{"location":"getting-started/creating-pages.html#warning","text":"Output warning This is warning admonition box. Markdown !!! warning \"warning\" This is warning admonition box.","title":"Warning"},{"location":"getting-started/creating-pages.html#error","text":"Output error This is an error admonition box. Markdown !!! error \"error\" This is an error admonition box.","title":"Error"},{"location":"getting-started/creating-pages.html#info","text":"Output info This is an info admonition box. Markdown !!! info \"info\" This is an info admonition box.","title":"Info"},{"location":"getting-started/creating-pages.html#quote","text":"Output quote This is an quote admonition box. Markdown !!! quote \"quote \" This is an quote admonition box.","title":"Quote"},{"location":"getting-started/creating-pages.html#example","text":"Output example This is an example admonition box. Markdown !!! example \"example\" This is an example admonition box.","title":"Example"},{"location":"getting-started/creating-pages.html#question","text":"Output question This is an example admonition box. Markdown !!! question \"question\" This is an question admonition box.","title":"Question"},{"location":"getting-started/creating-pages.html#failure","text":"Output failure This is an failure admonition box. Markdown !!! failure \"failure\" This is an failure admonition box.","title":"Failure"},{"location":"getting-started/creating-pages.html#danger_1","text":"Output danger This is an danger admonition box. Markdown !!! danger \"danger\" This is an danger admonition box.","title":"Danger"},{"location":"getting-started/creating-pages.html#bug","text":"Output bug This is an bug admonition box. Markdown !!! bug \"bug\" This is an bug admonition box.","title":"Bug"},{"location":"getting-started/creating-pages.html#abstract","text":"Output abstract This is an abstract admonition box. Markdown !!! abstract \"abstract\" This is an abstract admonition box.","title":"Abstract"},{"location":"getting-started/creating-pages.html#details","text":"Refer this for more details","title":"Details"},{"location":"getting-started/creating-pages.html#example-1_1","text":"Output Success Content. Warning Content. Tip Content. Note Content. Example Content. Quote Content. Info Content. Question Content. Failure Content. Bug Content. Abstract Content. Markdown ??? success Content. ??? warning classes Content. ??? tip Content. ??? note classes Content. ??? success Content. ??? example classes Content. ??? quote classes Content. ??? info classes Content. ??? question classes Content. ??? failure classes Content. ??? bug classes Content. ??? abstract classes Content.","title":"Example #1"},{"location":"getting-started/creating-pages.html#example-2_1","text":"Output Summary Here's some content. Summary Here's some content. Markdown ??? optional-class \"Summary\" optional-class: Here's some content. ??? multiple optional-class \"Summary\" multiple class: Here's some content.","title":"Example #2"},{"location":"getting-started/creating-pages.html#example-3","text":"Output Note Here's some content. Markdown ???+ note default expanded Here's some content.","title":"Example #3"},{"location":"getting-started/creating-pages.html#progress-bar","text":"Refer this for more details","title":"Progress Bar"},{"location":"getting-started/creating-pages.html#example-1_2","text":"Output 0% 5% 25% 45% 65% 85% 100% Markdown [=0% \"0%\"] [=5% \"5%\"] [=25% \"25%\"] [=45% \"45%\"] [=65% \"65%\"] [=85% \"85%\"] [=100% \"100%\"]","title":"Example #1"},{"location":"getting-started/creating-pages.html#example-2_2","text":"Output 10% More than 25% All set Markdown [=1/10 \"10%\"] [=5%] [=25% \"More than 25%\"] [=100/100 'All set']","title":"Example #2"},{"location":"getting-started/creating-pages.html#example-3_1","text":"Output 100% 85% 100% 85% 85% 100% 85% 85% 100% 85% 100% 85% 100% 100% Markdown [=100% \"100%\"]{: .static .blue} [=85% \"85%\"]{: .static .lightcyan} [=100% \"100%\"]{: .static .darkcyan} [=85% \"85%\"]{: .static .verydarkcyan} [=85% \"85%\"]{: .static .blueviolet} [=100% \"100%\"]{: .static .bisque} [=85% \"85%\"]{: .static .green} [=85% \"85%\"]{: .static .darkgreen} [=100% \"100%\"]{: .static .orange} [=85% \"85%\"]{: .static .orangered} [=100% \"100%\"]{: .static .olivedrab} [=85% \"85%\"]{: .static .red} [=100% \"100%\"]{: .static .gray} [=100% \"100%\"]{: .static .grey}","title":"Example #3"},{"location":"getting-started/creating-pages.html#example-4","text":"Output 85% 100% Markdown [=85% \"85%\"]{: .candystripe} [=100% \"100%\"]{: .candystripe .candystripe-animate} [=0%]{: .thin} [=5%]{: .thin} [=25%]{: .thin} [=45%]{: .thin} [=65%]{: .thin} [=85%]{: .thin} [=100%]{: .thin}","title":"Example #4"},{"location":"getting-started/creating-pages.html#example-5","text":"Output Going good In progress Blocked Not Started Completed Markdown [=91% \"Going good\"]{: .static .blue} [=85% \"In progress\"]{: .static .orange} [=100% \"Blocked\"]{: .static .red} [=100% \"Not Started\"]{: .static .grey} [=100% \"Completed\"]{: .static .darkgreen}","title":"Example #5"},{"location":"getting-started/creating-pages.html#3-references","text":"","title":"3\ufe0f\u20e3 References"},{"location":"getting-started/creating-pages.html#markdown","text":"Github Markdown Mkdocs Writing your Docs Material for MKDocs pymdown-extensions","title":"Markdown \ud83d\udcaa"},{"location":"getting-started/creating-pages.html#emojis","text":"Emojis Github Markup Emojis emoji-cheat-sheet style-digits","title":"Emojis \ud83d\ude03"},{"location":"getting-started/creating-pages.html#badges","text":"Badges","title":"Badges \ud83d\udcdb"},{"location":"getting-started/creating-pages.html#drawings","text":"mermaid js mermaid plugin","title":"Drawings \u2712\ufe0f"},{"location":"getting-started/creating-pages.html#others","text":"Markdown Guide","title":"Others \ud83d\udcd2"},{"location":"getting-started/deploying.html","text":"Markdown pages needs to be converted to HTML pages, and should be deployed to a place to be served. Normally markdown is pushed to main/master branch \ud83d\udd00 and in case of github, the static contents are automatically served rom gh-pages branch Manually \u00b6 The following command would build the current branch and push the static site to gh-pages branch, if you are doing this for the first time, gh-pages brach might not exist in this case it would automatically create this branch for you. mkdocs gh-deploy Sample output INFO - Cleaning site directory INFO - Building documentation to directory: E: \\m kdocs \\d oc-as-code \\s ite INFO - Documentation built in 1 .66 seconds INFO - Copying 'E:\\mkdocs\\doc-as-code\\site' to 'gh-pages' branch and pushing to GitHub. INFO - Your documentation should shortly be available at: https://mnadeem.github.io/doc-as-code/ Automatically \u00b6 Github Actions \u2699\ufe0f \u00b6 Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml , and copy and paste the following contents: \ud83d\udc47 name : ci on : push : branches : - master jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force Jenkinsfile \u2699\ufe0f \u00b6 If you have the following infrastructure Jenkins Instance Docker agent where mkdocs is installed. Jenkins pipleline infrastructure Further do the following \ud83d\udc47 Creating a Jenkins job (if you dont have organization plugin) Adding github webhook (if you dont have organization plugin) Adding Credentials to Jenkins instance Then Use the following jenkinsfile \ud83d\udc47 pipeline { agent { label 'docker-mkdocs-slave' } environment { ORG = 'Your ORG' // This should be CHANGED REPO = 'Your Repo' // This should be CHANGED CREDENTIALS_ID = '{{JenkinsCredentialId}}' // This should be CHANGED MKDOCS_VERSION = '1.0.4' LC_ALL='en_US.utf-8' LANG='en_US.utf-8' } stages { stage('Build & Deploy Docs') { when { branch 'master' } steps { withCredentials([usernamePassword(credentialsId: \"$env.CREDENTIALS_ID\", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) { sh \"\"\" . /etc/profile.d/jenkins.sh git config --global user.name \"${USERNAME}\" git remote set-url origin https://${USERNAME}:${PASSWORD}@github.com/${env.ORG}/${env.REPO}.git export GIT_USER=${USERNAME}:${PASSWORD} export GITHUB_HOST=github.com mkdocs gh-deploy --force \"\"\" } } } } } GitLab Pages \u2699\ufe0f \u00b6 If you're hosting your code on GitLab, deploying to GitLab Pages can be done by using the GitLab CI task runner. At the root of your repository, create a task definition named .gitlab-ci.yml and copy and paste the following contents: \ud83d\udc47 image : python:latest pages : stage : deploy only : - master script : - pip install mkdocs-material - mkdocs build --site-dir public artifacts : paths : - public","title":"Deploying"},{"location":"getting-started/deploying.html#manually","text":"The following command would build the current branch and push the static site to gh-pages branch, if you are doing this for the first time, gh-pages brach might not exist in this case it would automatically create this branch for you. mkdocs gh-deploy Sample output INFO - Cleaning site directory INFO - Building documentation to directory: E: \\m kdocs \\d oc-as-code \\s ite INFO - Documentation built in 1 .66 seconds INFO - Copying 'E:\\mkdocs\\doc-as-code\\site' to 'gh-pages' branch and pushing to GitHub. INFO - Your documentation should shortly be available at: https://mnadeem.github.io/doc-as-code/","title":"Manually"},{"location":"getting-started/deploying.html#automatically","text":"","title":"Automatically"},{"location":"getting-started/deploying.html#github-actions","text":"Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml , and copy and paste the following contents: \ud83d\udc47 name : ci on : push : branches : - master jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force","title":"Github Actions \u2699\ufe0f"},{"location":"getting-started/deploying.html#jenkinsfile","text":"If you have the following infrastructure Jenkins Instance Docker agent where mkdocs is installed. Jenkins pipleline infrastructure Further do the following \ud83d\udc47 Creating a Jenkins job (if you dont have organization plugin) Adding github webhook (if you dont have organization plugin) Adding Credentials to Jenkins instance Then Use the following jenkinsfile \ud83d\udc47 pipeline { agent { label 'docker-mkdocs-slave' } environment { ORG = 'Your ORG' // This should be CHANGED REPO = 'Your Repo' // This should be CHANGED CREDENTIALS_ID = '{{JenkinsCredentialId}}' // This should be CHANGED MKDOCS_VERSION = '1.0.4' LC_ALL='en_US.utf-8' LANG='en_US.utf-8' } stages { stage('Build & Deploy Docs') { when { branch 'master' } steps { withCredentials([usernamePassword(credentialsId: \"$env.CREDENTIALS_ID\", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) { sh \"\"\" . /etc/profile.d/jenkins.sh git config --global user.name \"${USERNAME}\" git remote set-url origin https://${USERNAME}:${PASSWORD}@github.com/${env.ORG}/${env.REPO}.git export GIT_USER=${USERNAME}:${PASSWORD} export GITHUB_HOST=github.com mkdocs gh-deploy --force \"\"\" } } } } }","title":"Jenkinsfile \u2699\ufe0f"},{"location":"getting-started/deploying.html#gitlab-pages","text":"If you're hosting your code on GitLab, deploying to GitLab Pages can be done by using the GitLab CI task runner. At the root of your repository, create a task definition named .gitlab-ci.yml and copy and paste the following contents: \ud83d\udc47 image : python:latest pages : stage : deploy only : - master script : - pip install mkdocs-material - mkdocs build --site-dir public artifacts : paths : - public","title":"GitLab Pages \u2699\ufe0f"},{"location":"getting-started/document-as-code.html","text":"Get Started 1\ufe0f\u20e3 \u00b6 There are many tools to write documentation, most of them center around writing markdown files which eventually gets converted to HTML pages Some of the famous ones are Mkdocs Python Based Jekyll Ruby based Docusaurus React based Why Document As Code 2\ufe0f\u20e3 \u00b6 Since it is just markdown you don't have to worry about another decommission and later migration It follows the organization principle of reveal by policy and hide by intension when it comes to Documentation, it encourages learning and sharing It resides In Version Control System along with your code in a separate project Out of the box searching available If you love code, you would definitely love writing documents as code Highly customizable, lots of extensions Highly configurable, change themes easily and on the fly Lots of plugins available Easily create diagrams Easily embed other complicated shared html pages Full History maintained in VCS (github) who changed what and when? Pain Points 3\ufe0f\u20e3 \u00b6 If you don't like to code, you may not like document as code , we will have to wait for sophisticated editors It would take some time to reflect the changes on your site, even if you have the pipeline setup. It requires some intelligence to get started. Not that intuitive as Confluence Comparing 4\ufe0f\u20e3 \u00b6 Teams \u00b6 TODO Sharepoint \u00b6 TODO Mark down websites 5\ufe0f\u20e3 \u00b6 SAP Jenkins-library mkdocs-material V1 Engineering Documentation Awesome Kubernetes","title":"Document As Code"},{"location":"getting-started/document-as-code.html#get-started-1","text":"There are many tools to write documentation, most of them center around writing markdown files which eventually gets converted to HTML pages Some of the famous ones are Mkdocs Python Based Jekyll Ruby based Docusaurus React based","title":"Get Started 1\ufe0f\u20e3"},{"location":"getting-started/document-as-code.html#why-document-as-code-2","text":"Since it is just markdown you don't have to worry about another decommission and later migration It follows the organization principle of reveal by policy and hide by intension when it comes to Documentation, it encourages learning and sharing It resides In Version Control System along with your code in a separate project Out of the box searching available If you love code, you would definitely love writing documents as code Highly customizable, lots of extensions Highly configurable, change themes easily and on the fly Lots of plugins available Easily create diagrams Easily embed other complicated shared html pages Full History maintained in VCS (github) who changed what and when?","title":"Why Document As Code 2\ufe0f\u20e3"},{"location":"getting-started/document-as-code.html#pain-points-3","text":"If you don't like to code, you may not like document as code , we will have to wait for sophisticated editors It would take some time to reflect the changes on your site, even if you have the pipeline setup. It requires some intelligence to get started. Not that intuitive as Confluence","title":"Pain Points 3\ufe0f\u20e3"},{"location":"getting-started/document-as-code.html#comparing-4","text":"","title":"Comparing 4\ufe0f\u20e3"},{"location":"getting-started/document-as-code.html#teams","text":"TODO","title":"Teams"},{"location":"getting-started/document-as-code.html#sharepoint","text":"TODO","title":"Sharepoint"},{"location":"getting-started/document-as-code.html#mark-down-websites-5","text":"SAP Jenkins-library mkdocs-material V1 Engineering Documentation Awesome Kubernetes","title":"Mark down websites 5\ufe0f\u20e3"},{"location":"getting-started/hiding-secondary-sidebar.html","text":"@media only screen and (min-width: 50em) { .md-sidebar--secondary { display: none; } .md-content { margin-right: 0; margin-left: 0; padding:0; margin-top:0;max-width: 100%; } .md-content__inner {margin-top: 0; padding-top: 0} B \u00b6 Title is also hidden C \u00b6 Secondary side bar is hidden C \u00b6","title":"Hiding Secondary Sidebar"},{"location":"getting-started/hiding-secondary-sidebar.html#b","text":"Title is also hidden","title":"B"},{"location":"getting-started/hiding-secondary-sidebar.html#c","text":"Secondary side bar is hidden","title":"C"},{"location":"getting-started/hiding-secondary-sidebar.html#c_1","text":"","title":"C"},{"location":"getting-started/home.html","text":"Document as Code \u00b6 Getting Started \u00b6 Prerequisites \u00b6 In order to run your MkDocs page locally, you'll need Python installed on your machine, as well as the Python package manager, pip. You can check if you have these already installed from the command line: python --version pip --version Install the mkdocs package using pip, as well as other dependencies, such as the theme this template uses: pip install mkdocs mkdocs-material Development \u00b6 To start working on your documentation locally, you will need to clone this repo: git clone https://github.com/mnadeem/doc-as-code.git cd doc-as-code To start up the server, run this command: mkdocs serve Open http://127.0.0.1:8000 in a browser to see the documentation page you have created! \ud83c\udf89 Project layout \u00b6 Your repository will resemble the directory structure here: mkdocs.yml # The configuration file docs/ index.md # The documentation homepage img/ # Image directory ... # Other directories with Markdown pages Deployment \u00b6 Refer this for more details. Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy --force - builds the docs and pushes the content to gh-pages branch, for more details refer this","title":"Home"},{"location":"getting-started/home.html#document-as-code","text":"","title":"Document as Code"},{"location":"getting-started/home.html#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/home.html#prerequisites","text":"In order to run your MkDocs page locally, you'll need Python installed on your machine, as well as the Python package manager, pip. You can check if you have these already installed from the command line: python --version pip --version Install the mkdocs package using pip, as well as other dependencies, such as the theme this template uses: pip install mkdocs mkdocs-material","title":"Prerequisites"},{"location":"getting-started/home.html#development","text":"To start working on your documentation locally, you will need to clone this repo: git clone https://github.com/mnadeem/doc-as-code.git cd doc-as-code To start up the server, run this command: mkdocs serve Open http://127.0.0.1:8000 in a browser to see the documentation page you have created! \ud83c\udf89","title":"Development"},{"location":"getting-started/home.html#project-layout","text":"Your repository will resemble the directory structure here: mkdocs.yml # The configuration file docs/ index.md # The documentation homepage img/ # Image directory ... # Other directories with Markdown pages","title":"Project layout"},{"location":"getting-started/home.html#deployment","text":"Refer this for more details.","title":"Deployment"},{"location":"getting-started/home.html#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy --force - builds the docs and pushes the content to gh-pages branch, for more details refer this","title":"Commands"},{"location":"tech-stack/techstack.html","text":"","title":"Tech Stack"}]}